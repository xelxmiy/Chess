package chess.Forms;

import chess.StyleClasses.StyleManager;
import java.awt.Component;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import chess.Chess;

/** The Place where the magic happens. This frame contains the board the game is
 * played on. 
 * 
 * @author Adam Belski
 * @since 07-Jun-2023
 * @version 1.0.2
 */
public class GameFrame extends javax.swing.JFrame {
    
    /**
     * Creates new form GameFrame
     */
    public GameFrame() {
        initComponents();
        setIconImage();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gameboardPanel = new javax.swing.JPanel();
        backgroundPanel = new javax.swing.JPanel();
        blackTimer = new javax.swing.JLabel();
        whiteTimer = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Chess");
        setBackground(StyleManager.jPanelAccents);
        setName("MainFrame"); // NOI18N
        setResizable(false);
        getContentPane().setLayout(null);

        gameboardPanel.setBackground(StyleManager.jPanelBackground);
        gameboardPanel.setBorder(StyleManager.BORDER);
        gameboardPanel.setForeground(StyleManager.WHITE
        );
        gameboardPanel.setLayout(null);
        getContentPane().add(gameboardPanel);
        gameboardPanel.setBounds(0, 0, 720, 720);

        backgroundPanel.setBackground(StyleManager.jPanelBackground);
        backgroundPanel.setLayout(null);

        blackTimer.setBackground(StyleManager.darkCell);
        blackTimer.setFont(StyleManager.TITLE_FONT);
        blackTimer.setForeground(StyleManager.WHITE);
        blackTimer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        blackTimer.setText(Chess.blackTimer.minsCounter + ":" + Chess.blackTimer.secondsCounter);
        blackTimer.setBorder(StyleManager.BORDER);
        backgroundPanel.add(blackTimer);
        blackTimer.setBounds(0, 0, 360, 158);

        whiteTimer.setBackground(StyleManager.lightCell);
        whiteTimer.setFont(StyleManager.TITLE_FONT);
        whiteTimer.setForeground(StyleManager.WHITE);
        whiteTimer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        whiteTimer.setText(Chess.lightTimer.minsCounter + ":" + Chess.lightTimer.secondsCounter);
        whiteTimer.setBorder(StyleManager.BORDER);
        backgroundPanel.add(whiteTimer);
        whiteTimer.setBounds(0, 560, 360, 158);

        getContentPane().add(backgroundPanel);
        backgroundPanel.setBounds(720, 0, 360, 720);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel backgroundPanel;
    private static javax.swing.JLabel blackTimer;
    public static javax.swing.JPanel gameboardPanel;
    private static javax.swing.JLabel whiteTimer;
    // End of variables declaration//GEN-END:variables
        /** give <code>gamePabel</code> a component
     * 
     * @param c component to add to the gamePanel
     */
    public static void giveComponentToGameBoardPanel(Component c) {
        gameboardPanel.add(c);
    }
        /**
     * sets the icon for the JFrame
     */
    private void setIconImage() {
        try {
            File IconImagePath
                    = new File("src\\images\\icon.png");
            IconImagePath.getAbsolutePath();
            Image iconImage = ImageIO.read(IconImagePath);
            this.setIconImage(iconImage);
        } catch (IOException ex) {
        }
    }
    
    public static void UpdateTimer() {
        whiteTimer.setText(Chess.lightTimer.minsCounter + ":" + Chess.lightTimer.secondsCounter);
        blackTimer.setText(Chess.blackTimer.minsCounter + ":" + Chess.blackTimer.secondsCounter);
    }
}
